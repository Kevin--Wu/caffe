name: "mymnist"
layer{
  name: "train_data"
  type: "Data"
  top:  "data"
  top:  "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "mywork/mnist/mymnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer{
  name: "test_data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "mywork/mnist/mymnist_test_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer{
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_data"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 6
    kernel_size: 5
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
    stride: 1
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_data"
  top: "pool1_data"
  pooling_param {
    pool: MAX
    kernel_size: 2 
    stride: 2      
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1_data"
  top: "conv2_data"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
    stride: 1
    group: 2
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_data"
  top: "pool2_data"
  pooling_param {
    pool: MAX
    kernel_size: 2 
    stride: 2      
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2_data"
  top: "ip1_data"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1_data"
  top: "ip1_data"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1_data"
  top: "ip2_data"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2_data"
  bottom: "label"
  top: "loss"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2_data"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
























